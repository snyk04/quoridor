@startuml
'https://plantuml.com/sequence-diagram

interface IView
interface IModel
{
    StartNewGame() : void
    MoveCurrentPlayerToCell() : void
}

class ViewCommunication
class NewModel
{
    view : IView 

    gameCycle : GameCycle
    playersController : PlayersController
    possibleMoves : PossibleMoves
    
    HighlightAvailableCells() : void
}

class CellsManager
{
    AmountOfRows : int
    AmountOfColumns : int
    
    cells : Cell[,]
    
    InitializeCellField() : void
    
    CheckIfCellIsReal() : bool
    CheckIfCellIsBusy() : bool
}
class GameCycle
{
    model : Model

    gameMode : GameMode
    
    OnGameStart : Action
    OnGameEnd : Action
    
    StartNewGame() : void
    EndGame() : void
}
class PlayersController
{
    model : NewModel
    
    firstPlayerStartPosition : CellCoordinates
    secondPlayerStartPosition : CellCoordinates

    firstPlayer : Player
    secondPlayer : Player   
    
    currentPlayer : Player
    currentPlayerType : PlayerType
    
    InitializePlayers() : void
    PlacePlayersAtStartPositions() : void
    
    MovePlayerToCell() : void
    MoveCurrentPlayerToCell() : void
    
    WaitForThePlayer() : void
    WaitForTheNextPlayer() : void
    ComputeBotMove() : void
    
    ChangeCurrentPlayer() : void
}
class PossibleMoves
{
    model : NewModel
    
    currentTurnPlayerCoordinates : CellCoordinates
    
    TryToAddCellToPossibleMoves()
    GetPossibleMovesFromCell()
    ShowPossibleMoves()
}

IView <|.. ViewCommunication
IModel <|.. NewModel

NewModel o- ViewCommunication

NewModel *--o PossibleMoves
NewModel *-- CellsManager
NewModel *--o GameCycle
NewModel *--o PlayersController

@enduml