@startuml

interface IView
{
    ShowAvailableMoves(c : IEnumerable<Coordinates>) : void
    ShowAvailableWalls(w : IEnumerable<Coordinates>) : void
    
    MovePlayerToCell(p : PlayerType, c : Coordinates) : void
    PlaceWall(p : Player, c : Coordinates) : void

    EndGame(p : PlayerType) : void
}
class ViewCommunication #brown
class ModelCommunication #brown

'---Audio---'
abstract class SoundPlayer
{
    Play() : void
    Stop() : void
    
    ExecuteAfterSound(m : Action) : void
}
class RandomSoundPlayer
{
    PlayNext() : void
}
class CertainSoundPlayer
{
    Play() : void
    Stop() : void
}

'---Storages---'
interface IEnumerable<T>
{
    GetEnumerator() : IEnumerator<T>
}
class Storage<T>
{
    [coordinates]() : T
}
class CellStorage
class CellVisual
{
    Highlight() : void
    Unhighlight() : void
}
class WallStorage
class WallVisual
{
    HandlePlace() : void
    
    Highlight() : void
    Unhighlight() : void
}

'---Other---'

class AmountOfWallsUpdater
{
    UpdateCounter(p : Player) : void
}

class CellHighlighter
{
    UnhighlightAllCells() : void
    HighlightCells(c : IEnumerable<Coordinates>) : void
}

class PlayerMover
{
    MovePlayerToCell(p : PlayerType, c : Coordinates) : void
}

class VictoryManager
{
    ShowVictory(p : PlayerType) : void
}

class WallController
{
    PlaceWall(w : Coordinates) : void
    EnableWalls(w : IEnumerable<Coordinates>) : void
}
    
IView <|..  ViewCommunication
ViewCommunication -o ModelCommunication

ViewCommunication o-- AmountOfWallsUpdater

ViewCommunication o-- CertainSoundPlayer


ViewCommunication o--o PlayerMover
PlayerMover o-- RandomSoundPlayer

ViewCommunication o--o VictoryManager
VictoryManager o-- CertainSoundPlayer

ViewCommunication o--o WallController
WallController o-- RandomSoundPlayer

ViewCommunication o--o CellHighlighter
ViewCommunication o-- CellStorage
ViewCommunication o-- WallStorage

IEnumerable <|.. Storage
Storage <|-- CellStorage
Storage <|-- WallStorage
CellStorage o-- CellVisual
WallStorage o-- WallVisual

CertainSoundPlayer --|> SoundPlayer
RandomSoundPlayer --|> SoundPlayer

@enduml